# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: platform
  name: {{ .Release.Name }}-platform

spec:
  ports:
    - name: chassis
      port: 9443
  selector:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: platform
...
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-platform
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: platform

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: platform
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "myapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: platform
    spec:
      volumes:
        - name: egeria-connector-volume
          emptyDir: {}
{{ if .Values.downloads }}
      initContainers:
        - name: init-connector
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-env
          command:
            - "/bin/bash"
            - "-c"
            - >
                cd /opt/egeria/connectors &&
{{ range .Values.downloads }}
                curl --location {{ .url | quote }} --output {{ .filename | quote }} &&
{{ end }}
                echo "Downloads complete."
          volumeMounts:
            - mountPath: /opt/egeria/connectors
              name: egeria-connector-volume
{{ end }}
      containers:
        - name: platform
          image: "{{ if (.Values.image.egeria.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.egeria.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.egeria.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.egeria.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.egeria.name }}\
                  :{{ .Values.image.egeria.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.egeria.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-env
          env:
            - name: "LOADER_PATH"
              value: "/opt/egeria/connectors,/deployments/server/lib"
            {{ if .Values.debug.egeriaJVM }}
              - name: JAVA_DEBUG
                value:  "true"
            {{ end }}
            {{ if .Values.debug.jvmopts }}
              - name: JAVA_OPTS
                value: {{ .Values.egeria.core.jvmopts | quote }}
            {{ end }}
          ports:
            - containerPort: 9443
            {{ if .Values.debug.egeriaJVM }}
            - containerPort: 5005
            {{ end }}
          readinessProbe:
            tcpSocket:
              port: 9443
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 6
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
              cpu: "{{ .Values.resources.limits.cpu }}"
          volumeMounts:
            - mountPath: /opt/egeria/connectors
              name: egeria-connector-volume
              readOnly: true

...
